use serde::{Serialize, Deserialize};
use clap::ValueEnum;

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct Vulnerability {
    pub id: String,
    pub vulnerability_type: VulnerabilityType,
    pub severity: Severity,
    pub title: String,
    pub description: String,
    pub location: Location,
    pub impact: String,
    pub remediation: String,
    pub code_snippet: String,
    pub confidence: f32,
}

#[derive(Debug, Serialize, Deserialize, Clone, Copy, PartialEq)]
pub enum VulnerabilityType {
    SecretsLeakage,
    CommandInjection,
    SensitiveFileAccess,
    ToolPoisoning,
    PromptInjection,
    McpConfig,
}

#[derive(Debug, Serialize, Deserialize, Clone, Copy, PartialEq, Eq, PartialOrd, Ord, ValueEnum)]
pub enum Severity {
    Low,
    Medium,
    High,
    Critical,
}

#[derive(Debug, Serialize, Deserialize, Clone)]
pub struct Location {
    pub file_path: String,
    pub line: usize,
    pub column: usize,
}
